/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlysinhvien_01;

import javax.swing.JFileChooser;

import component.LopHoc;
import component.School;
import component.SinhVien;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Gogojungle
 */
public class managementClassRoom extends javax.swing.JFrame {

    private final int IMPORT_FILE = 1;
    private final int EXPORT_FILE = 2;
    private String tenLop = "";
    static School sc = new School();
    addClass item;
    addSV sv;    
    managementSchedule tkb;
    
    private String[] columName = {
        "STT", "MSSV", "Họ Tên", "Giới Tính", "CMND"
    };

       
     /**
     * Creates new form ManagementStudent
     */
    public managementClassRoom() {
        initComponents();
        initLayout();
    }

    private void initLayout() {
        className.setVisible(false);
        btnExport.setVisible(false);
        
        jsvTable.setVisible(false);
        if (sc.getsoLop() > 0) {
            lableNotify.setVisible(false);
            panelOption.setVisible(true);
            addDataForComboBoxClass();
        } else {
            lableNotify.setText("Chưa Có Danh Sách Lớp!");
            panelOption.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        btnImport = new javax.swing.JButton();
        classCombo = new javax.swing.JComboBox<>();
        panelOption = new java.awt.Panel();
        btnAddSVToClass = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnTKB = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnReload = new javax.swing.JButton();
        panelInfo = new java.awt.Panel();
        className = new javax.swing.JTextField();
        btnExport = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jsvTable = new javax.swing.JTable();
        lableNotify = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Danh Sách Lớp");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);

        btnImport.setBackground(new java.awt.Color(153, 204, 255));
        btnImport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        classCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        classCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--" }));
        classCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboActionPerformed(evt);
            }
        });

        panelOption.setBackground(new java.awt.Color(204, 204, 204));
        panelOption.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnAddSVToClass.setBackground(new java.awt.Color(153, 204, 255));
        btnAddSVToClass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddSVToClass.setText("Thêm SV");
        btnAddSVToClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSVToClassActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Thời Khóa Biểu");

        btnTKB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTKB.setText("Xem TKB");
        btnTKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOptionLayout = new javax.swing.GroupLayout(panelOption);
        panelOption.setLayout(panelOptionLayout);
        panelOptionLayout.setHorizontalGroup(
            panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOptionLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(btnAddSVToClass)
                .addGroup(panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOptionLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel3))
                    .addGroup(panelOptionLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnTKB, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        panelOptionLayout.setVerticalGroup(
            panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddSVToClass, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelOptionLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTKB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Danh Sách Lớp:");

        btnReload.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        className.setEditable(false);
        className.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        className.setToolTipText("");
        className.setAlignmentY(0.0F);

        btnExport.setBackground(new java.awt.Color(153, 204, 255));
        btnExport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInfoLayout = new javax.swing.GroupLayout(panelInfo);
        panelInfo.setLayout(panelInfoLayout);
        panelInfoLayout.setHorizontalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        panelInfoLayout.setVerticalGroup(
            panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(className, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExport.getAccessibleContext().setAccessibleName("");

        jScrollPane1.setAutoscrolls(true);

        jsvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsvTable.setAutoscrolls(false);
        jsvTable.setColumnSelectionAllowed(true);
        jsvTable.setFocusable(false);
        jScrollPane1.setViewportView(jsvTable);

        lableNotify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableNotify.setForeground(new java.awt.Color(255, 0, 0));
        lableNotify.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(btnImport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(90, 90, 90)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(btnReload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(275, 275, 275))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(panelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(203, 203, 203)))
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lableNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(437, 437, 437))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnImport)
                    .addComponent(jLabel2)
                    .addComponent(classCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReload))
                .addGap(29, 29, 29)
                .addComponent(lableNotify)
                .addGap(23, 23, 23)
                .addComponent(panelOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(panelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        btnImport.getAccessibleContext().setAccessibleName("");
        classCombo.getAccessibleContext().setAccessibleName("");
        jLabel2.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        importExportFile("Choose file import", IMPORT_FILE);
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        importExportFile("Export File", EXPORT_FILE);
    }//GEN-LAST:event_btnExportActionPerformed

    private void classComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboActionPerformed
        if(classCombo.getSelectedItem().toString().equals("--")){
            JOptionPane.showMessageDialog(null, "!!! Chưa Có Danh Sách Lớp");
        } else{
            addDataForTableListSV();
        }
    }//GEN-LAST:event_classComboActionPerformed

    
    private void btnTKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKBActionPerformed
        // TODO add your handling code here:
        String nameClass = String.valueOf(classCombo.getItemAt(classCombo.getSelectedIndex()));
        if(!(nameClass.equals("--"))){
            tkb = new managementSchedule(nameClass);
            tkb.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Lớp");
        }
    }//GEN-LAST:event_btnTKBActionPerformed

    private void btnAddSVToClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSVToClassActionPerformed
        String nameClass = String.valueOf(classCombo.getItemAt(classCombo.getSelectedIndex()));
        if(!(nameClass.equals("--"))){
            sv = new addSV(nameClass);
            sv.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Lớp");
        }
    }//GEN-LAST:event_btnAddSVToClassActionPerformed

    private void addDataForComboBoxClass(){
        ArrayList<LopHoc> listLH = sc.getList();
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
        for (LopHoc i : listLH) {
        // add từng tên lớp vào comboBox
            String name = i.getTenLop();
//          System.out.println(name);
            cbModel.addElement(name);
        }          
        classCombo.setModel(cbModel);
    }
    
    public String getClassNameInComboBox(){
        String result = classCombo.getSelectedItem().toString();
        return result;
    }
    
    private void addDataForTableListSV(){
        
        String select = getClassNameInComboBox();
//        System.out.println("Select: " + select);
        className.setText("DANH SÁCH SINH VIÊN:  " + select);  
          
        ArrayList<LopHoc> listLH = sc.getList(); 
        DefaultTableModel tbModel = new DefaultTableModel();
        
        int stt = 1;
        
        for (LopHoc i : listLH) {
            if(select.equalsIgnoreCase(i.getTenLop())){
                className.setVisible(true);
                btnExport.setVisible(true);
                jsvTable.setVisible(true);
                tbModel.setColumnIdentifiers(columName);
                                                
                // get danh sách sinh viên và hiển thị lên table    
                ArrayList<SinhVien> listSV = new ArrayList<SinhVien>();
                listSV = i.getListSinhVien();
                for (SinhVien sv : listSV) {
                    
//                    System.out.println(sv.getMSSV() + " " + sv.getName());
                    
                    String[] info = new String[5];
                    info[0] = String.valueOf(stt);
                    info[1] = sv.getMSSV();
                    info[2] = sv.getName();
                    if (sv.getSex() == 0) {
                        info[3] = "Nữ";
                    } else {
                        info[3] = "Nam";
                    }
                    info[4] = sv.getCMND();

                    tbModel.addRow(info);
                    stt++;
                }
                jsvTable.setModel(tbModel);
            } 
            else{
//                btnExport.setVisible(false);
//                DefaultTableModel tbModel = new DefaultTableModel();
                tbModel.setColumnIdentifiers(columName);
                jsvTable.setModel(tbModel);
            }            
        }
    }
    
    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        addDataForTableListSV();        
    }//GEN-LAST:event_btnReloadActionPerformed

    private void importExportFile(String title, int type) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle(title);
        int choose = -1;
        switch (type) {
            case IMPORT_FILE:
                choose = fileChooser.showOpenDialog(null);
                break;
            case EXPORT_FILE:
                choose = fileChooser.showSaveDialog(null);
                break;
        }

        if (choose == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            switch (type) {
                case IMPORT_FILE:
                    readFile(f);
                    break;
                case EXPORT_FILE:
                    writeFile(f);
                    break;
            }
        }
    }
           
    
    // Đọc file được import
    private void readFile(File file) {
        try {
            try (FileReader reader = new FileReader(file)) {
                BufferedReader buffer = new BufferedReader(reader);

                String line;
                line = buffer.readLine();
//                System.out.println("File import: " + line);

//                LopHoc cr;
//                cr = school.getClassRoom(this.className);
//                boolean checkExist = true;
//                if (cr.checkNameClass("")) {
//                    checkExist = false;
//                    cr.setName(_className[0]);
//                }
                
                String[] tenLop = line.split(",");
                LopHoc lh = this.sc.getLopHoc(tenLop[0]);
                
//                System.out.println("tenLop[0]: " + tenLop[0]);
                
                boolean checkLopHoc = true;
                if (lh.getTenLop().equals("")) {
                    checkLopHoc = false;
                    lh.setTenLop(tenLop[0]);
                }
                
                if (checkLopHoc == true) {
                    this.sc.setLopHoc(lh, line);
                    JOptionPane.showMessageDialog(null, "!!! Class Already Exists");                    
                } else {
                    this.sc.setSoLop(this.sc.getsoLop() + 1);
                    this.sc.addClass(lh);
                    
                    // get info SV
                    while ((line = buffer.readLine()) != null) {
                        String[] info = line.split(",");
                        
                        SinhVien sv = new SinhVien();
                        sv.setMSSV(info[1]);
                        sv.setName(info[2]);
                        sv.setCMND(info[4]);
                        int gt = -1;

                        if (info[3].equalsIgnoreCase("Nam")) {
                            gt = 1;
                        }
                        if (info[3].equalsIgnoreCase("Nữ")) {
                            gt = 0;
                        }

                        sv.setGT(gt);
                        lh.themSinhVien(sv);
                    }
                    
                }
                
                buffer.close();
            }
            initLayout();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void writeFile(File file) {
        try{            
            file.createNewFile();
            FileOutputStream fos = new FileOutputStream(file);
            
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fos, StandardCharsets.UTF_8));
                        
            String tenLop = getClassNameInComboBox();
            LopHoc lop = sc.getLopHoc(tenLop);
            
            writer.append(tenLop);
            writer.append('\n');
            
            writer.append("STT,");
            writer.append(columName[1]);
            writer.append(",");
            writer.append(columName[2]);
            writer.append(",");
            writer.append(columName[3]);
            writer.append(",");
            writer.append(columName[4]);
            writer.append('\n');
            
            
            ArrayList<SinhVien> listStudent = new ArrayList<SinhVien>();
            listStudent = lop.getListSinhVien();
            
            if (listStudent.size() > 0) {
                int stt = 1;
                // Lấy danh sách học sinh trong lớp
                for (SinhVien sv : listStudent) {
                    writer.append(Integer.toString(stt) + ',');                    
                    writer.append(sv.getMSSV());
                    writer.append(',');
                    writer.append(sv.getName());
                    writer.append(',');
                    if (sv.getSex() == 1) {
                        writer.append("Nam");
                    } else {
                        writer.append("Nữ");
                    }
                    writer.append(',');
                    writer.append(sv.getCMND());
                    writer.append('\n');
                    
                    stt++;
                }
                
            }
            writer.close();
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error to export file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managementClassRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managementClassRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managementClassRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managementClassRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
//        new panelOption().setVisible(false);
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                panelOption.setVisible(false);
                new managementClassRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSVToClass;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnTKB;
    private javax.swing.JComboBox<String> classCombo;
    private javax.swing.JTextField className;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jsvTable;
    private javax.swing.JLabel lableNotify;
    private java.awt.Panel panelInfo;
    private static java.awt.Panel panelOption;
    // End of variables declaration//GEN-END:variables
}
