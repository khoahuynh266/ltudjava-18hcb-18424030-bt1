/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlysinhvien_01;

/**
 *
 * @author Gogojungle
 */

import component.LopHoc;
import component.Lop_MonHoc;
import component.MonHoc;
import component.School;
import component.SinhVien;
import component.ThoiKhoaBieu;
import component.DiemSinhVien;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static quanlysinhvien_01.managementClassRoom.sc;

public class managementSchedule extends javax.swing.JFrame {

    private String className = "";
    private String idSubject = "";
    private final int IMPORT_FILE = 1;
    private final int IMPORT_FILE_SCORE = 2;
    private String[] columnNames = {
        "STT", "Mã môn", "Tên môn", "Phòng học"
    };
    
    private final String[] columnNamesStudent = {
        "STT", "MSSV", "Họ tên", "Giới tính", "CMND"
    };
    
    private final String[] columnNamesScore = {
        "STT", "MSSV", "Họ tên", "Điểm GK", "Điểm CK", "Điểm khác", "Điểm tổng", "Kết quả"
    };
    
    addSV addSV;
    managementClassRoom manageCR;
    /**
     * Creates new form managementSchedule
     */
    public managementSchedule() {
//        this.manageCR.setVisible(false);
        initComponents();
        initLayout();        
//        manageCR = new managementClassRoom();
        manageCR.setVisible(false);
        
    }
    
    public managementSchedule(String className){
        this.className = className;
        initComponents();
        initLayout();
        this.manageCR.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableTKB = new javax.swing.JTable();
        btnImportTKB = new javax.swing.JButton();
        cbBoxMHId = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lableNotify = new javax.swing.JLabel();
        panelListSV = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDSSVSubject = new javax.swing.JTable();
        lableDSSVLop = new javax.swing.JLabel();
        lableTKB = new javax.swing.JLabel();
        btnReLoad = new javax.swing.JButton();
        panelDiem = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnImportDiem = new javax.swing.JButton();
        btnDiem = new javax.swing.JButton();
        bntUpdate = new javax.swing.JButton();
        panelDSSV = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnDSSV = new javax.swing.JButton();
        btnAddSVBySubject = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thời Khóa Biểu");
        setFocusCycleRoot(false);

        tableTKB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTKB.setEnabled(false);
        jScrollPane1.setViewportView(tableTKB);

        btnImportTKB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnImportTKB.setText("Import");
        btnImportTKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportTKBActionPerformed(evt);
            }
        });

        cbBoxMHId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBoxMHIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Môn Học:");

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lableNotify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableNotify.setForeground(new java.awt.Color(255, 0, 0));
        lableNotify.setText("jLabel3");

        tableDSSVSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableDSSVSubject);

        lableDSSVLop.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableDSSVLop.setForeground(new java.awt.Color(0, 153, 153));
        lableDSSVLop.setText("DSSV");

        javax.swing.GroupLayout panelListSVLayout = new javax.swing.GroupLayout(panelListSV);
        panelListSV.setLayout(panelListSVLayout);
        panelListSVLayout.setHorizontalGroup(
            panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListSVLayout.createSequentialGroup()
                .addGroup(panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelListSVLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(lableDSSVLop))
                    .addGroup(panelListSVLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelListSVLayout.setVerticalGroup(
            panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lableDSSVLop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lableTKB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableTKB.setText("TKB");

        btnReLoad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReLoad.setText("Reload");
        btnReLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReLoadActionPerformed(evt);
            }
        });

        panelDiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Quản Lý Điểm");

        btnImportDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImportDiem.setText("Import");
        btnImportDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportDiemActionPerformed(evt);
            }
        });

        btnDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDiem.setText("Bảng Điểm");
        btnDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiemActionPerformed(evt);
            }
        });

        bntUpdate.setText("Cập Nhật");

        javax.swing.GroupLayout panelDiemLayout = new javax.swing.GroupLayout(panelDiem);
        panelDiem.setLayout(panelDiemLayout);
        panelDiemLayout.setHorizontalGroup(
            panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiemLayout.createSequentialGroup()
                        .addComponent(btnImportDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDiem))
                    .addGroup(panelDiemLayout.createSequentialGroup()
                        .addComponent(bntUpdate)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelDiemLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDiemLayout.setVerticalGroup(
            panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImportDiem)
                    .addComponent(btnDiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bntUpdate)
                .addContainerGap())
        );

        panelDSSV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Quản Lý DSSV");

        btnDSSV.setText("DS Sinh Viên");
        btnDSSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSSVActionPerformed(evt);
            }
        });

        btnAddSVBySubject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddSVBySubject.setText("Thêm SV");
        btnAddSVBySubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSVBySubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDSSVLayout = new javax.swing.GroupLayout(panelDSSV);
        panelDSSV.setLayout(panelDSSVLayout);
        panelDSSVLayout.setHorizontalGroup(
            panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSSVLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(panelDSSVLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddSVBySubject, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDSSV))))
                .addGap(26, 26, 26))
        );
        panelDSSVLayout.setVerticalGroup(
            panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDSSVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(btnDSSV)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddSVBySubject)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelListSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1163, Short.MAX_VALUE)
                        .addGap(80, 80, 80))))
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(lableTKB)
                .addGap(78, 78, 78)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lableNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 444, Short.MAX_VALUE)
                                .addComponent(panelDSSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(panelDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBoxMHId, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnImportTKB, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(176, 176, 176)
                                .addComponent(btnReLoad)))
                        .addGap(110, 110, 110))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDSSV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lableTKB)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(cbBoxMHId, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImportTKB, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lableNotify)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(panelListSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnImportTKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportTKBActionPerformed
        // TODO add your handling code here:
        importExportFile("Choose file import", IMPORT_FILE);
    }//GEN-LAST:event_btnImportTKBActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.manageCR.setVisible(true);
//        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbBoxMHIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBoxMHIdActionPerformed
        // TODO add your handling code here:        
//        addDataTableSchedule();
    }//GEN-LAST:event_cbBoxMHIdActionPerformed

    private void btnAddSVBySubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSVBySubjectActionPerformed
        // TODO add your handling code here:
        String idMH = String.valueOf(cbBoxMHId.getItemAt(cbBoxMHId.getSelectedIndex()));
        if (cbBoxMHId.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Môn Học");
        } else {
            addSV = new addSV(className, idMH);
            addSV.setVisible(true);
        }        
    }//GEN-LAST:event_btnAddSVBySubjectActionPerformed

    private void btnReLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReLoadActionPerformed
        // TODO add your handling code here:
        addDataTable();        
    }//GEN-LAST:event_btnReLoadActionPerformed

    private void btnDSSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSSVActionPerformed
        // TODO add your handling code here:
        addDataTable();
    }//GEN-LAST:event_btnDSSVActionPerformed

    private void btnDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiemActionPerformed
        // TODO add your handling code here:
        lableDSSVLop.setVisible(false);
        
        DefaultTableModel table = new DefaultTableModel();
       
        String valueComboBox = cbBoxMHId.getSelectedItem().toString();        
        Lop_MonHoc lop_MH = sc.getLopMonHoc(className, valueComboBox);
        lableDSSVLop.setText("Danh sách điểm: " + className + " - " + valueComboBox);
                table.setColumnIdentifiers(columnNamesScore);
                ArrayList<DiemSinhVien> listDiem = lop_MH.getListDiem();
                int stt = 1;
                if(listDiem.size() > 0){
                    for(DiemSinhVien item : listDiem){
                        String[] rows = new String[8];
                        rows[0] = String.valueOf(stt);
                        rows[1] = item.getSV().getMSSV();
                        rows[2] = item.getSV().getName();
                        rows[3] = String.valueOf(item.getDiemGK());
                        rows[4] = String.valueOf(item.getDiemCK());
                        rows[5] = String.valueOf(item.getDiemKhac());
                        rows[6] = String.valueOf(item.getDiemTong());
                        rows[7] = item.xepLoai();
                        
                        table.addRow(rows);
                        stt++;
                    }
                    tableDSSVSubject.setModel(table);
                } else {
                    JOptionPane.showMessageDialog(null, "!!! Chưa Có Bảng Điểm");
                }
    }//GEN-LAST:event_btnDiemActionPerformed

    private void btnImportDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportDiemActionPerformed
        // TODO add your handling code here:
        importExportFile("Choose file import", IMPORT_FILE_SCORE);
    }//GEN-LAST:event_btnImportDiemActionPerformed
    
    private void initLayout(){
        panelListSV.setVisible(false);
        panelDSSV.setVisible(false);
        panelDiem.setVisible(false);
        addDataForComboBoxClass();        
    }
    
    private void addDataForComboBoxClass(){
        manageCR = new managementClassRoom();
        System.out.println("Class Name:  " + className);
        lableTKB.setText("Thời Khóa Biểu " + className); 
        ArrayList<LopHoc> listLH = sc.getList();
        DefaultComboBoxModel cbBox = new DefaultComboBoxModel();
        DefaultTableModel tblTKB = new DefaultTableModel();
        
        for (LopHoc i : listLH) {                   
            ArrayList<ThoiKhoaBieu> listSchedule = i.getTKB();
            if(listSchedule.size() > 0){
                lableNotify.setVisible(false);
                panelDSSV.setVisible(true);
                panelDiem.setVisible(true);
                tblTKB.setColumnIdentifiers(columnNames);
                int stt = 1;
                for(ThoiKhoaBieu item : listSchedule){
                    
                    String[] info = new String[4];
                    info[0] = String.valueOf(stt);
                    info[1] = item.getMH().getMaMH();
                    info[2] = item.getMH().getTenMH();
                    info[3] = item.getPH();
                    
                    System.out.println("Mã MH: " + item.getMH().getMaMH());

                    cbBox.addElement(item.getMH().getMaMH()); // add từng mã môn vào comboBox
                    tblTKB.addRow(info);
                    stt++;
                }                
                tableTKB.setModel(tblTKB);
                cbBoxMHId.setModel(cbBox);
            } else {
                lableNotify.setText("Chưa Có Thời Khóa Biểu!!!!");
                tblTKB.setColumnIdentifiers(columnNames);
                tableTKB.setModel(tblTKB);
            }           
        }          
    }
    
    private void addDataTable(){
        lableDSSVLop.setVisible(false);
        
        DefaultTableModel table = new DefaultTableModel();
       
        String valueComboBox = cbBoxMHId.getSelectedItem().toString();        
        Lop_MonHoc lop_MH = sc.getLopMonHoc(className, valueComboBox);
        
//        System.out.println("Lớp - Môn Học:  " + className + " - " + valueComboBox);
        
        if(!(valueComboBox.isEmpty())){
            int stt = 1;
            lableDSSVLop.setVisible(true);
            
            lableDSSVLop.setText("Danh Sách Sinh Viên: " + className + " - " + valueComboBox);
            panelListSV.setVisible(true);            
            
            table.setColumnIdentifiers(columnNamesStudent);
            
            ArrayList<SinhVien> listSV = lop_MH.getListSV();
            if(listSV.size() > 0) {
                for(SinhVien sv : listSV){                
                String[] rows = new String[5];
                rows[0] = String.valueOf(stt);
                rows[1] = sv.getMSSV();
                rows[2] = sv.getName();
                    if (sv.getSex() == 0) {
                        rows[3] = "Nữ";
                    } else {
                        rows[3] = "Nam";
                    }
                rows[4] = sv.getCMND();
                
                table.addRow(rows);
                stt++;
            }
               tableDSSVSubject.setModel(table);
            } else {
                JOptionPane.showMessageDialog(null, "!!! Chưa Có Danh Sách Lớp Theo Môn Học");
            }
            
        } else {
            table.setColumnIdentifiers(columnNamesStudent);
            tableDSSVSubject.setModel(table);
        }
    }
        
    private void importExportFile(String title, int type) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle(title);
        int choose = -1;
        switch (type) {
            case IMPORT_FILE:
                choose = fileChooser.showOpenDialog(null);
                break;
            case IMPORT_FILE_SCORE:
                choose = fileChooser.showSaveDialog(null);
                break;
        }

        if (choose == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            switch (type) {
                case IMPORT_FILE:
                    readFile(f);
                    break;
                case IMPORT_FILE_SCORE:
                    readFileScore(f);;
                    break;
            }
        }
    }
    
    private void readFile(File file) {
        try {
            try (FileReader reader = new FileReader(file)) {
                BufferedReader buffer = new BufferedReader(reader);

                String line;
                line = buffer.readLine();                
//                System.out.println("File import: " + line);
                String[] tenLop = line.split(",");
                LopHoc lh = new LopHoc();
                ArrayList<Lop_MonHoc> class_subject = new ArrayList<Lop_MonHoc>();
                
                lh = sc.getLopHoc(tenLop[0]);
//                System.out.println("tenLop[0]: " + tenLop[0]);
                if(tenLop[0].equalsIgnoreCase(className)) {                       
                    // get tkb
                    while ((line = buffer.readLine()) != null) {
                        String[] info = line.split(",");
                        
                        MonHoc monHoc = new MonHoc(info[0], info[1]);
                        ThoiKhoaBieu tKB = new ThoiKhoaBieu(monHoc, info[2]);
                        
                        // Add TKB vào lớp học
                        lh.addThoiKhoaBieu(tKB);
                        
                        Lop_MonHoc classSubject = new Lop_MonHoc();
                        classSubject.setClassName(className);
                        classSubject.setMaMonHoc(info[0]);
                        classSubject.setListSV(lh.getListSinhVien());
                        
                        class_subject.add(classSubject);
                    }
                    sc.setListLopMonHoc(class_subject);
                    sc.setLopHoc(lh, className);
                
                buffer.close();
                } else {
                    JOptionPane.showMessageDialog(null, "!!! Thời Khóa Biểu Sai Lớp");
                }
                
                System.out.println(sc.getListMHClass().size());
            }
            initLayout();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void readFileScore(File file) {
        try{
            FileReader reader = new FileReader(file);
            BufferedReader buffer = new BufferedReader(reader);

            String line;
            line = buffer.readLine(); 
            
            Lop_MonHoc class_subject = sc.getLopMonHoc(className, idSubject);
            ArrayList<DiemSinhVien> listDiem = class_subject.getListDiem();
            listDiem.clear();
            
            while((line = buffer.readLine()) != null){
                String[] tableDiem = line.split(",");
                 System.out.println("class - id: " + tableDiem[0] + " - " + tableDiem[1]);
                DiemSinhVien diemSV = new DiemSinhVien();
                // Bug chưa fix 
                SinhVien sv = new SinhVien(tableDiem[0], tableDiem[1]);
                diemSV.setSV(sv);                
                diemSV.setDiemGK(Float.parseFloat(tableDiem[2]));
                diemSV.setDiemCK(Float.parseFloat(tableDiem[3]));
                diemSV.setDiemKhac(Float.parseFloat(tableDiem[4]));
                diemSV.setDiemTong(Float.parseFloat(tableDiem[5]));

                listDiem.add(diemSV);
            }
            System.out.println("SIze: " + listDiem.size());
            
            class_subject.setListDiemSV(listDiem);
            sc.setLopMonHoc(this.className, this.idSubject, class_subject);
            buffer.close();
            
            initLayout();
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error to export file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managementSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managementSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managementSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managementSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managementSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntUpdate;
    private javax.swing.JButton btnAddSVBySubject;
    private javax.swing.JButton btnDSSV;
    private javax.swing.JButton btnDiem;
    private javax.swing.JButton btnImportDiem;
    private javax.swing.JButton btnImportTKB;
    private javax.swing.JButton btnReLoad;
    private javax.swing.JComboBox<String> cbBoxMHId;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lableDSSVLop;
    private javax.swing.JLabel lableNotify;
    private javax.swing.JLabel lableTKB;
    private javax.swing.JPanel panelDSSV;
    private javax.swing.JPanel panelDiem;
    private javax.swing.JPanel panelListSV;
    private javax.swing.JTable tableDSSVSubject;
    private javax.swing.JTable tableTKB;
    // End of variables declaration//GEN-END:variables
}
